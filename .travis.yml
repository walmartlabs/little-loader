language: node_js

node_js:
  - "0.10"

# Use container-based Travis infrastructure.
sudo: false

branches:
  only:
    - master

env:
  global:
    - TEST_FUNC_HOST=127.0.0.1
    # `sauce_connect` Travis add-on tunnel identifier _must_ be `TRAVIS_JOB_NUMBER`
    # https://docs.travis-ci.com/user/sauce-connect/
    - SAUCE_CONNECT_TUNNEL_ID=$TRAVIS_JOB_NUMBER
    - SAUCE_USERNAME=wml-little-loader

before_install:
  # GUI for real browsers.
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  # Upgrade to npm v2
  - npm install -g npm@2

before_script:
  # Install dev. stuff (e.g., selenium drivers).
  - npm run install-dev
  # Start up processes used in parallel tests.
  # Note: We're playing a bit fast & loose here bceause selenium standalone needs to "just be ready"
  # by the time we start our tests.
  - nohup bash -c "node_modules/.bin/selenium-standalone start 2>&1 &"

addons:
  jwt:
    secure: t9yalh16COfTgMWI58MKD5cq3/4t1jiiGmRz7xmi5T4QkRkxYzATF+C60z2nXbnsF4RLflcRBgJZ0PbR/L2JxQ3yALasougJjb0EbVr8XoJQiyhnUEQpRxtoxn9oV9Fnp3/DDQduPTZ1zPzd20N7mOpYoqNMaVnMFj353fVzI3vph29/uakvR/nNCq7BNjcOll5+JRifpXFgsACWUalU+IR/R1xmrciw7KoLlHfe8Zy349X0mv3Ez2uugqsQ5CZnRI9vffNvIWXhuVU0sCoANydYS+d5vBjO5txrxZSv14enXFKBLaXkxViYmzQMHI2FDjx71KsKeCoGoH9ooSOfwPSXSrUFTRDN0nhow3Z3uqo3EjP/uJ0I+Hoe7gJWvUDw90Q1IX2WuoSxWU+fdgEewZyvQboaC6CSaF2rdvCfl058uIbcGhhkkGAmpwvJKSsytWOJjeTA3hpYPSHGlvVLvXER1bfAIC/iBf5VGBExotNrPSpG+PsqzhpUsFSmkjY5gpKElhcNW9Ag3r5IJJJL1xVu8aXO55T5VrmTn/jINEAo91nJZhHrjX7x0kPWzlvU5/JAAOjpcrOVfpvqjkpvmxev/JtPZl2cx8lHadPXYJw98hIagpQdkfojNI5C4ACSrTVNe/IoEujgykbh9egpe8HGsG+U+g6qogmFPQFUP/8=
  sauce_connect: true

script:
  # Run all base checks (with `local.phantomjs` browser for functional tests,
  # and PhantomJS+FF for Karma tests).
  - npm run check-ci

  # Sauce Labs
  #
  # Run all different environments in parallel for different `ROWDY_SETTINGS`
  # values. Flags key:
  #
  # - `buffer`: Save test output until _end_ of test run finishes (to make more
  #   sense of concurrent output).
  # - `tries=2`: Try each separate test suite 2x before declaring a failures.
  # - `queue=NUM`: (Not Enabled) Limit concurrency to max of `NUM` tasks at the
  #   same time.
  #
  - >-
    node_modules/.bin/builder envs test-func-ci --buffer --tries=2
    '[ { "TEST_FUNC_PORT": 3030, "ROWDY_SETTINGS":"sauceLabs.IE_8_Windows_2008_Desktop" },
    { "TEST_FUNC_PORT": 3040, "ROWDY_SETTINGS":"sauceLabs.IE_9_Windows_2008_Desktop" },
    { "TEST_FUNC_PORT": 3050, "ROWDY_SETTINGS":"sauceLabs.IE_10_Windows_2012_Desktop" },
    { "TEST_FUNC_PORT": 3060, "ROWDY_SETTINGS":"sauceLabs.IE_11_Windows_2012_R2_Desktop" },
    { "TEST_FUNC_PORT": 3070, "ROWDY_SETTINGS":"sauceLabs.safari_7_OS_X_10_9_Desktop" },
    { "TEST_FUNC_PORT": 3080, "ROWDY_SETTINGS":"sauceLabs.chrome_latest_Windows_2012_R2_Desktop" },
    { "TEST_FUNC_PORT": 3090, "ROWDY_SETTINGS":"sauceLabs.firefox_latest_Windows_2012_R2_Desktop" },
    { "TEST_FUNC_PORT": 3100, "ROWDY_SETTINGS":"local.firefox" } ]'

  # Aggregate all functional coverage JSON objects to one report.
  - npm run cov-report-func

  # Manually send coverage reports to coveralls.
  - ls  coverage/*/lcov.info coverage/client/*/*/lcov.info | cat
  - cat coverage/*/lcov.info coverage/client/*/*/lcov.info | ./node_modules/.bin/coveralls || echo "Coveralls upload failed"
